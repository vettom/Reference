

      - job_name: "beat_exporter"
        hetzner_sd_configs:
          - role: hcloud
            bearer_token_file: /etc/prometheus/secrets/hetzner-sync
        relabel_configs:
          - source_labels: [__meta_hetzner_hcloud_private_ipv4_gomedia]
            regex: (.+)
            replacement: ${1}:9479
            target_label: __address__
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            target_label: instance
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            replacement: htz
            target_label: cloud
          - source_labels: [__meta_hetzner_hcloud_datacenter_location_network_zone]
            regex: (.+)
            target_label: zone
          - source_labels: [instance]
            regex: ".+sync.+"
            action: keep

      - job_name: "ssh_exporter"
        hetzner_sd_configs:
          - role: hcloud
            bearer_token_file: /etc/prometheus/secrets/hetzner-sync
        relabel_configs:
          - source_labels: [__meta_hetzner_hcloud_private_ipv4_gomedia]
            regex: (.+)
            replacement: ${1}:8128
            target_label: __address__
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            target_label: instance
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            replacement: htz
            target_label: cloud
          - source_labels: [__meta_hetzner_hcloud_datacenter_location_network_zone]
            regex: (.+)
            target_label: zone
          - source_labels: [instance]
            regex: ".+sync.+"
            action: keep

      - job_name: "ipahealthcheck_exporter"
        static_configs:
          - targets:
              - ipa-1.prd.gomedia.io:9888
              - ipa-2.prd.gomedia.io:9888
              - ipa-3.prd.gomedia.io:9888

      - job_name: "node_exporter"
        gce_sd_configs:
          - project: gomedia-kubernetes-control
            zone: europe-west1-b
            port: 9100
          - project: gomedia-kubernetes-control
            zone: europe-west1-c
            port: 9100
          - project: gomedia-kubernetes-control
            zone: europe-west1-d
            port: 9100
          - project: gomedia-kubernetes-development
            zone: europe-west1-b
            port: 9100
          - project: gomedia-kubernetes-development
            zone: europe-west1-c
            port: 9100
          - project: gomedia-kubernetes-development
            zone: europe-west1-d
            port: 9100
          - project: gomedia-kubernetes-production
            zone: europe-west1-b
            port: 9100
          - project: gomedia-kubernetes-production
            zone: europe-west1-c
            port: 9100
          - project: gomedia-kubernetes-production
            zone: europe-west1-d
            port: 9100
          - project: gomedia-dmz
            zone: europe-west1-b
            port: 9100
          - project: gomedia-dmz
            zone: europe-west1-c
            port: 9100
          - project: gomedia-dmz
            zone: europe-west1-d
            port: 9100
        hetzner_sd_configs:
          - role: hcloud
            bearer_token_file: /etc/prometheus/secrets/hetzner-sync
            port: 9100
        ec2_sd_configs:
          - region: eu-west-1
            port: 9100
          - region: eu-west-2
            port: 9100
          - region: us-east-1
            port: 9100
        relabel_configs:
          - source_labels: [__meta_gce_instance_name]
            regex: (.+)
            target_label: instance
          - source_labels: [__meta_gce_project]
            regex: (.+)
            target_label: gce_project
          - source_labels: [__meta_gce_instance_name]
            regex: (.+)
            replacement: gcp
            target_label: cloud
          - source_labels: [__meta_gce_zone]
            regex: .*/zones/(.+)
            target_label: zone
          - source_labels: [__meta_hetzner_hcloud_private_ipv4_gomedia]
            regex: (.+)
            replacement: ${1}:9100
            target_label: __address__
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            target_label: instance
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            replacement: htz
            target_label: cloud
          - source_labels: [__meta_hetzner_hcloud_datacenter_location_network_zone]
            regex: (.+)
            target_label: zone
          - source_labels: [__meta_ec2_tag_Name]
            regex: (.+)
            target_label: instance
          - source_labels: [__meta_ec2_tag_Name]
            regex: (.+)
            replacement: aws
            target_label: cloud
          - source_labels: [__meta_ec2_availability_zone]
            regex: (.+)
            target_label: zone
          - source_labels: [__meta_ec2_tag_Monitored]
            regex: "False"
            action: drop
          # Ignores Kubernetes node pool instances as they are targeted by automatic service discovery
          - source_labels: [instance]
            regex: "^gke-.+"
            action: drop

      - job_name: "blackbox_http_puppet"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx_insecure]
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__address__]
            target_label: name
            replacement: "Puppet"
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: (.+puppetproxy)
          - source_labels:
              [
                __meta_kubernetes_service_annotation_external_dns_alpha_kubernetes_io_hostname,
                __address__,
              ]
            target_label: __param_target
            regex: (.+);.+:(.+)
            replacement: https://$1:$2/status/v1/simple
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115

      - job_name: "blackbox_http_content_exporter"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx]
        gce_sd_configs:
          - project: gomedia-kubernetes-production
            zone: europe-west1-b
          - project: gomedia-kubernetes-production
            zone: europe-west1-c
        relabel_configs:
          - source_labels: [__meta_gce_instance_name]
            regex: (.+stg-goview)
            action: keep
          - source_labels: [__meta_gce_instance_name]
            target_label: instance
          - source_labels: [__meta_gce_instance_name]
            regex: (.+).stg-goview
            target_label: __param_target
            replacement: http://$1.stg.gomedia.io:5522/api/health
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115

      - job_name: "blackbox_http_goview"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx]
        gce_sd_configs:
          - project: gomedia-kubernetes-production
            zone: europe-west1-b
          - project: gomedia-kubernetes-production
            zone: europe-west1-c
          - project: gomedia-kubernetes-development
            zone: europe-west1-b
          - project: gomedia-kubernetes-development
            zone: europe-west1-c
        relabel_configs:
          - source_labels: [__meta_gce_instance_name]
            regex: (.+-goview)
            action: keep
          - source_labels: [__meta_gce_instance_name]
            target_label: instance
          - source_labels: [__meta_gce_instance_name]
            regex: (.+)-(.+)-goview
            target_label: __param_target
            replacement: https://$1.$2.gomedia.io
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115

      - job_name: "blackbox_http_onboard_cna"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx]
        gce_sd_configs:
          - project: gomedia-kubernetes-production
            zone: europe-west1-b
          - project: gomedia-kubernetes-production
            zone: europe-west1-c
          - project: gomedia-kubernetes-development
            zone: europe-west1-b
          - project: gomedia-kubernetes-development
            zone: europe-west1-c
        relabel_configs:
          - source_labels: [__meta_gce_instance_name]
            regex: (.+-cna)
            action: keep
          - source_labels: [__meta_gce_instance_name]
            target_label: instance
          - source_labels: [__meta_gce_instance_name]
            regex: (.+)-(.+)-cna
            target_label: __param_target
            replacement: https://$1.cna-portals.$2.gomedia.io
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115

      - job_name: "blackbox_http_goview_fairplay"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx_truthy]
        gce_sd_configs:
          - project: gomedia-kubernetes-production
            zone: europe-west1-b
          - project: gomedia-kubernetes-production
            zone: europe-west1-c
          - project: gomedia-kubernetes-development
            zone: europe-west1-b
          - project: gomedia-kubernetes-development
            zone: europe-west1-c
        relabel_configs:
          - source_labels: [__meta_gce_instance_name]
            regex: (.+-goview)
            action: keep
          - source_labels: [__meta_gce_label_drm]
            regex: false
            action: drop
          - source_labels: [__meta_gce_instance_name]
            regex: (.+)-(.+)-goview
            target_label: __param_target
            replacement: https://$1.$2.gomedia.io/api/v2/fairplay/status
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115

      - job_name: "blackbox_http_200_internal"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [http_2xx] # Look for a HTTP 200 response.
        static_configs:
          - targets: [http://blackbox.prd.gomedia.io:5000]
            labels:
              name: "DCSL Monitor"
          - targets: [https://files.gomedia.io/service/rest/v1/status]
            labels:
              name: "Nexus"
          - targets: [https://zabbix.prd.gomedia.io]
            labels:
              name: "Zabbix"
          - targets:
              [
                https://consul-vault1.int.gomedia.io/v1/status/leader,
                https://consul-vault2.int.gomedia.io/v1/status/leader,
              ]
            labels:
              name: "Consul"
          - targets:
              [
                https://ipa-1.prd.gomedia.io,
                https://ipa-2.prd.gomedia.io,
                https://ipa-3.prd.gomedia.io,
              ]
            labels:
              name: "IPA"
          - targets: [https://gomedia.io]
            labels:
              name: "GoMedia company website"
          - targets: [https://atlantis.hooks.cloud.gomedia.io]
            labels:
              name: "Atlantis"
          - targets:
              - https://pfsense.prd.gomedia.io
            labels:
              name: "pfSense"
          - targets:
              - https://vault.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault.prd.gomedia.io/v1/sys/health?standbyok=true
              - https://vault.prd.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault.dev.gomedia.io/v1/sys/health?standbyok=true
              - https://vault.dev.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-1.prd.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-1.prd.gomedia.io/v1/sys/health?standbyok=true
              - https://vault-2.prd.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-2.prd.gomedia.io/v1/sys/health?standbyok=true
              - https://vault-3.prd.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-3.prd.gomedia.io/v1/sys/health?standbyok=true
              - https://vault-1.dev.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-1.dev.gomedia.io/v1/sys/health?standbyok=true
              - https://vault-2.dev.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-2.dev.gomedia.io/v1/sys/health?standbyok=true
              - https://vault-3.dev.gomedia.io:8210/v1/sys/health?standbyok=true
              - https://vault-3.dev.gomedia.io/v1/sys/health?standbyok=true
              - https://vault1.int.gomedia.io/v1/sys/health?standbyok=true
              - https://vault2.int.gomedia.io/v1/sys/health?standbyok=true
            labels:
              name: "Vault Server"
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9115 # The blackbox exporter's real hostname:port.
      - job_name: "blackbox_tcp_ssh_banner_sync_external"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        hetzner_sd_configs:
          - role: hcloud
            bearer_token_file: /etc/prometheus/secrets/hetzner-sync
        relabel_configs:
          - source_labels: [__meta_hetzner_server_name]
            regex: ".+sync.+"
            action: keep
          - source_labels: [__meta_hetzner_server_name]
            regex: (.+)
            replacement: ${1}:2020
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9117

      - job_name: "blackbox_tcp_ssh_banner_external"
        scrape_interval: 60s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          # Remove sync targets when production uses port 2020
          - targets:
              - avt.sync.gomedia.io:2005
              - cpa.sync.gomedia.io:2013
              - gh.sync.gomedia.io:2010
              - sbb.sync.gomedia.io:2011
              - spa.sync.gomedia.io:2014
              - za.sync.gomedia.io:2012
              - za.fallback.gomedia.io:3012
              - sbb.fallback.gomedia.io:3011
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox.prd.gomedia.io:9117

      - job_name: "kubernetes-nodes"

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
          - role: node

        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: kubernetes-nodes-cadvisor
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Only for Kubernetes ^1.7.3.
          # See: https://github.com/prometheus/prometheus/issues/2916
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - regex: 'app_kubernetes_io_managed_by|helm_sh_chart|pod_template_hash|app_kubernetes_io_part_of|argocd_argoproj_io_instance'
            action: labeldrop
          - action: replace
            source_labels: [id]
            regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
            target_label: rkt_container_name
            replacement: "${2}-${1}"
          - action: replace
            source_labels: [id]
            regex: '^/system\.slice/(.+)\.service$'
            target_label: systemd_service_name
            replacement: "${1}"
      # Port not specified so port names used with name 'metrics'
      - job_name: "kubernetes-pods-multiport"
        kubernetes_sd_configs:
          - role: pod
        metric_relabel_configs:
          - regex: 'app_kubernetes_io_managed_by|helm_sh_chart|pod_template_hash|app_kubernetes_io_part_of|argocd_argoproj_io_instance'
            action: labeldrop
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: metrics
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: drop
            regex: (.+)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        metric_relabel_configs:
          - regex: 'app_kubernetes_io_managed_by|helm_sh_chart|pod_template_hash|app_kubernetes_io_part_of|argocd_argoproj_io_instance'
            action: labeldrop
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: keep
            regex: (.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # Using endpoints to discover kube-apiserver targets finds the pod IP
          # (host IP since apiserver uses host network) which is not used in
          # the server certificate.
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        # Keep only the default/kubernetes service endpoints for the https port. This
        # will add targets for each API server which Kubernetes adds an endpoint to
        # the default/kubernetes service.
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
        - replacement: apiserver
          action: replace
          target_label: job
        metric_relabel_configs:
        - source_labels: [__name__]
          action: drop
          regex: etcd_(debugging|disk|request|server).*
        - source_labels: [__name__]
          action: drop
          regex: apiserver_admission_controller_admission_latencies_seconds_.*
        - source_labels: [__name__]
          action: drop
          regex: apiserver_admission_step_admission_latencies_seconds_.*
        - source_labels: [__name__, group]
          regex: apiserver_request_duration_seconds_bucket;.+
          action: drop
        - source_labels: [__name__, group]
          regex: apiserver_request_duration_seconds_count;.+
          action: drop
      - job_name: "kubernetes-service-endpoints"
        kubernetes_sd_configs:
          - role: endpoints
        metric_relabel_configs:
          - regex: 'app_kubernetes_io_managed_by|helm_sh_chart|pod_template_hash|app_kubernetes_io_part_of|argocd_argoproj_io_instance|id|uid|container_id|method|path'
            action: labeldrop
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_node
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
      - job_name: 'fluentbit-pods'
        honor_labels: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: keep
            regex: fluentbit
          - source_labels: [__meta_kubernetes_pod_annotation_monitoring_gke_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)